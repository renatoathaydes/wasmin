# traditional, recursive implementation of factorial
def factorial [i64] i64;
fun factorial n = if eq n 1; 1;
                  mul n (factorial (sub n 1));

# without using recursion
#def factorial-2 [i64] i64;
#fun factorial-2 n = (
#    mut result = 1;
#    mut n' = n;
#    loop-if (n' > gt 1) (
#        let next-n = n' > sub 1;
#        result = n' > mul next-n > add result;
#        n' = next-n
#    )
#    result
#)

# _start is the main function in wasmtime
export def _start [] i64;

fun _start = factorial 20
